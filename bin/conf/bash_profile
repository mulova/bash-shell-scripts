export PYENV_ROOT="$HOME/.pyenv"

function setup_env {
    export UNITY2021=/Applications/Unity/Hub/Editor/2021
    export JAVA_HOME=$UNITY2021/PlaybackEngines/AndroidPlayer/OpenJDK
    export ANDROIDSDK=$UNITY2021/PlaybackEngines/AndroidPlayer/SDK
    export NDK=$UNITY2021/PlaybackEngines/AndroidPlayer/NDK
    NDK_TOOLCHAIN_ARM64=$NDK/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/arm-linux-androideabi/bin
    PATH=~/.local/bin:$ANDROIDSDK/platform-tools:$ANDROIDSDK/tools:$ANDROIDSDK/build-tools/28.0.3:$NDK_TOOLCHAIN_ARM64:/bin:$JAVA_HOME/bin:~/dev/bin:$PATH
}

PROMPT='%F{blue}%2~%f %* %# '

#export IMAGE_MAGICK=/opt/ImageMagick/bin
#launchctl setenv IMAGE_MAGICK $IMAGE_MAGICK

set -o vi
bindkey "^R" history-incremental-search-backward

# MacPorts Installer addition on 2016-10-18_at_11:18:04: adding an appropriate PATH variable for use with MacPorts.
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
# Finished adapting your PATH environment variable for use with MacPorts.

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi
if command -v pyenv-virtualenv-init 1>/dev/null 2>&1; then
  eval "$(pyenv virtualenv-init -)"
fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/user/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/user/opt/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/user/opt/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/user/opt/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

